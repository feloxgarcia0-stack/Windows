name: RDP con playit.gg (Automático - Versión Fija CORREGIDO)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Habilitar RDP y Crear Usuario
        run: |
          $Password = "P@ssw0rdFeloxPC2025!"
          net user Runner $Password /add /y
          net localgroup administrators Runner /add
          net localgroup "Remote Desktop Users" Runner /add
          # --- LÍNEA CORREGIDA: Se eliminó el guion extra en "CurrentControlSet" ---
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport=3389
          echo "RDP_USER=Runner" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RDP_PASSWORD=$Password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Iniciar Túnel con playit.gg
        run: |
          # URL de descarga específica y verificada (v0.15.26).
          Invoke-WebRequest -Uri 'https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe' -OutFile "C:\playit.exe"
          
          # Inicia playit en segundo plano.
          Start-Process -FilePath "C:\playit.exe" -ArgumentList "" -NoNewWindow -RedirectStandardOutput "$env:TEMP\playit.log" -RedirectStandardError "$env:TEMP\playit_error.log"
          
          echo "Esperando a que playit.gg establezca la conexión (40 segundos)..."
          Start-Sleep -Seconds 40
          
          # Intenta buscar la dirección del túnel ya asignada en el log.
          $TunnelAddress = Get-Content "$env:TEMP\playit.log" | Select-String -Pattern ".*\.playit\.gg:\d{1,5}" | ForEach-Object { $_.Matches.Value } | Select-Object -Last 1
          
          # PLAN B: Si no encuentra una dirección, busca el enlace de reclamación.
          if (-not $TunnelAddress) {
              Write-Host "No se encontró una dirección directa, buscando enlace de reclamación como alternativa."
              $TunnelAddress = Get-Content "$env:TEMP\playit.log" | Select-String -Pattern "https://playit.gg/claim/.*" | ForEach-Object { $_.Matches.Value } | Select-Object -Last 1
          }

          if (-not $TunnelAddress) {
              Write-Error "Error: No se pudo obtener la dirección del túnel ni un enlace de reclamación."
              Get-Content "$env:TEMP\playit_error.log"
              Get-Content "$env:TEMP\playit.log"
              exit 1
          }
          
          echo "PLAYIT_ADDRESS=$TunnelAddress" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Mostrar Credenciales de Conexión
        run: |
          Write-Host "================================================================"
          Write-Host "               CREDENCIALES DE ACCESO RDP"
          Write-Host "================================================================"
          Write-Host ""
          Write-Host "   Dirección (PC Name): ${{ env.PLAYIT_ADDRESS }}"
          Write-Host "   (Si es un enlace https, visítalo primero para reclamar el túnel)"
          Write-Host "   Usuario:             ${{ env.RDP_USER }}"
          Write-Host "   Contraseña:          ${{ env.RDP_PASSWORD }}"
          Write-Host ""
          Write-Host "================================================================"
          
      - name: Mantener la Conexión Activa
        run: Start-Sleep -Seconds 21300
