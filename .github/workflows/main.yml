name: RDP con Cloudflare Tunnel (Sin Cuenta)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Habilitar RDP y Crear Usuario
        run: |
          $Password = "P@ssw0rdFeloxPC2025!"
          net user Runner $Password /add /y
          net localgroup administrators Runner /add
          net localgroup "Remote Desktop Users" Runner /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport=3389
          echo "RDP_USER=Runner" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RDP_PASSWORD=$Password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Iniciar Cloudflare Tunnel
        run: |
          # Descarga el ejecutable de cloudflared (64-bit).
          Invoke-WebRequest -Uri 'https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-windows-amd64.exe' -OutFile 'C:\cloudflared.exe'
          
          # Inicia el túnel en modo "Quick Tunnel" para RDP en segundo plano.
          # La salida de error se redirige a un log para poder extraer la dirección.
          Start-Process -FilePath "C:\cloudflared.exe" -ArgumentList "tunnel --url tcp://localhost:3389" -NoNewWindow -RedirectStandardError "$env:TEMP\cloudflared.log"
          
          # Espera a que se establezca la conexión y se genere la dirección.
          Write-Host "Esperando a que Cloudflare establezca el túnel (20 segundos)..."
          Start-Sleep -Seconds 20
          
          # Busca la dirección pública en el log. Cloudflare usa un formato predecible.
          # El formato es tcp://nombre-aleatorio.trycloudflare.com
          $CfAddress = Get-Content "$env:TEMP\cloudflared.log" | Select-String -Pattern "tcp://.*\.trycloudflare.com" | ForEach-Object { $_.Matches.Value } | Select-Object -Last 1
          
          # Si no se encuentra, muestra un error.
          if (-not $CfAddress) {
              Write-Error "Error: No se pudo obtener la dirección del túnel de Cloudflare."
              Write-Host "Contenido del log:"
              Get-Content "$env:TEMP\cloudflared.log"
              exit 1
          }
          
          # Limpia el "tcp://" del inicio para que sea más fácil de usar.
          $CleanAddress = $CfAddress -replace "tcp://",""
          
          echo "CF_ADDRESS=$CleanAddress" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Mostrar Credenciales de Conexión
        run: |
          Write-Host "================================================================"
          Write-Host "               CREDENCIALES DE ACCESO RDP"
          Write-Host "================================================================"
          Write-Host ""
          Write-Host "   Usa los siguientes datos en tu cliente de Escritorio Remoto:"
          Write-Host ""
          Write-Host "   Dirección (PC Name): ${{ env.CF_ADDRESS }}"
          Write-Host "   Usuario:             ${{ env.RDP_USER }}"
          Write-Host "   Contraseña:          ${{ env.RDP_PASSWORD }}"
          Write-Host ""
          Write-Host "   NOTA: La dirección incluye el puerto. Cópiala y pégala tal cual."
          Write-Host "================================================================"
          
      - name: Mantener la Conexión Activa
        run: Start-Sleep -Seconds 21300
