name: RDP con ngrok (Sin Cuenta)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Habilitar RDP y Crear Usuario
        run: |
          $Password = "P@ssw0rdFeloxPC2025!"
          net user Runner $Password /add /y
          net localgroup administrators Runner /add
          net localgroup "Remote Desktop Users" Runner /add
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport=3389
          echo "RDP_USER=Runner" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "RDP_PASSWORD=$Password" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Instalar y Iniciar Ngrok
        run: |
          # Descarga ngrok y lo descomprime.
          Invoke-WebRequest -Uri 'https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip' -OutFile 'ngrok.zip'
          Expand-Archive ngrok.zip
          
          # Inicia el túnel ngrok para RDP en segundo plano.
          # No se necesita un token de autenticación para túneles temporales.
          Start-Process -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389 --log=stdout" -NoNewWindow -RedirectStandardOutput "$env:TEMP\ngrok.log"
          
          # Espera unos segundos para que la API de ngrok esté disponible.
          Start-Sleep -Seconds 10
          
          # Obtiene la dirección del túnel de forma fiable a través de la API de ngrok.
          $NgrokInfo = Invoke-RestMethod 'http://127.0.0.1:4040/api/tunnels'
          $TunnelUrl = $NgrokInfo.tunnels[0].public_url
          
          # Si no se pudo obtener la URL, muestra un error.
          if (-not $TunnelUrl) {
              Write-Error "Error: No se pudo obtener la dirección del túnel de ngrok."
              Get-Content "$env:TEMP\ngrok.log"
              exit 1
          }
          
          # Limpia la URL para que sea más fácil de usar.
          $CleanAddress = $TunnelUrl -replace "tcp://",""
          
          echo "NGROK_ADDRESS=$CleanAddress" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Mostrar Credenciales de Conexión
        run: |
          Write-Host "================================================================"
          Write-Host "               CREDENCIALES DE ACCESO RDP"
          Write-Host "================================================================"
          Write-Host ""
          Write-Host "   Usa los siguientes datos en tu cliente de Escritorio Remoto:"
          Write-Host ""
          Write-Host "   Dirección (PC Name): ${{ env.NGROK_ADDRESS }}"
          Write-Host "   Usuario:             ${{ env.RDP_USER }}"
          Write-Host "   Contraseña:          ${{ env.RDP_PASSWORD }}"
          Write-Host ""
          Write-Host "   NOTA: La dirección incluye el puerto. Cópiala y pégala tal cual."
          Write-Host "================================================================"
          
      - name: Mantener la Conexión Activa
        run: Start-Sleep -Seconds 21300
