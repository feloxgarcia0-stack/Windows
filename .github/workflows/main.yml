name: RDP con ZeroTier (Versión Corregida)

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
          netsh advfirewall firewall add rule name="Allow RDP" dir=in action=allow protocol=TCP localport=3389

      - name: Create RDP User with Secure Password
        run: |
          $password = -join ((65..90) + (97..122) + (48..57) | Get-Random -Count 14 | ForEach-Object {[char]$_})
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDP"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install and Connect ZeroTier
        run: |
          # Descarga e instala el cliente de ZeroTier
          Invoke-WebRequest -Uri "https://download.zerotier.com/dist/ZeroTier%20One.msi" -OutFile "$env:TEMP\zerotier.msi"
          Start-Process msiexec.exe -ArgumentList "/i", "`"$env:TEMP\zerotier.msi`"", "/quiet" -Wait
          
          # Espera a que el servicio se inicie
          Start-Sleep -Seconds 15
          
          # --- BLOQUE CORREGIDO CON EL MÉTODO Start-Process ---
          # Se define la ruta al ejecutable y los argumentos por separado.
          $ztCliPath = "C:\Program Files\ZeroTier\One\zerotier-cli.bat"
          $ztArgs = "join 4753cf475f1fafc2"
          
          # Se ejecuta el comando de forma robusta y se espera a que termine.
          Start-Process -FilePath $ztCliPath -ArgumentList $ztArgs -Wait -NoNewWindow
          
          # Espera a que se establezca la conexión y se asigne la IP
          Start-Sleep -Seconds 20
          
          # Se obtiene la dirección IP de la misma forma robusta.
          $ztListArgs = "listnetworks -j"
          $ztJson = Start-Process -FilePath $ztCliPath -ArgumentList $ztListArgs -Wait -NoNewWindow -PassThru | ForEach-Object { $_.StandardOutput.ReadToEnd() }
          $ztIP = ($ztJson | ConvertFrom-Json).assignedAddresses[0].split('/')[0]

          if (-not $ztIP) {
              Write-Error "Error: No se pudo obtener la dirección IP de ZeroTier."
              exit 1
          }
          echo "ZEROTIER_IP=$ztIP" >> $env:GITHUB_ENV
      
      - name: Display Connection Details
        run: |
          Write-Host "`n=== RDP ACCESS CREDENTIALS ==="
          Write-Host "Address (PC Name): ${{ env.ZEROTIER_IP }}"
          Write-Host "Username: RDP"
          Write-Host "Password: ${{ env.RDP_PASSWORD }}"
          Write-Host "============================`n"
          
          while ($true) {
              $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
              Write-Host "[$timestamp] RDP session is active. This job will be terminated automatically after 6 hours."
              Start-Sleep -Seconds 300
          }
